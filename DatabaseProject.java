import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;



public class ProjectMain extends javax.swing.JFrame {


    public ProjectMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        creditLimitTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        addCustomerButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        itemIDTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        quantityTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        shapeTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        colorTextField = new javax.swing.JTextField();
        addItemButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        viewInventoryButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        nameToFindTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        idToFindTextField = new javax.swing.JTextField();
        viewCustomerInfoButton = new javax.swing.JButton();
        findCustomersButton = new javax.swing.JButton();
        lowStockButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        SearchASale = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        idTextField1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        itemIDTextField1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        dateTextField = new javax.swing.JTextField();
        quantitySoldTextField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        saleID = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        AddSaleButton = new javax.swing.JButton();
        customeridSaleTextField1 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel11.setFont(new java.awt.Font("Gadugi", 1, 48)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("Karim's Kites");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel11)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 255, 102));

        jLabel4.setText("Customer ID");

        jLabel5.setText("Credit Limit");

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel1.setText("Enter A New Customer");

        addCustomerButton.setText("Add Customer");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Customer Name");

        jLabel3.setText("Address");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(addressTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(idTextField)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(creditLimitTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(creditLimitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3)))
                .addGap(34, 34, 34)
                .addComponent(addCustomerButton)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 0, 0));

        jLabel6.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel6.setText("Enter New Item Into Inventory");

        jLabel8.setText("Item ID");

        jLabel10.setText("Description");

        jLabel9.setText("Price");

        jLabel7.setText("Quantity on Hand");

        jLabel12.setText("Shape");

        jLabel13.setText("Color");

        addItemButton.setText("Add Item");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shapeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(descriptionTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(priceTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shapeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addItemButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 153));

        jLabel19.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 0, 255));
        jLabel19.setText("Actions");

        viewInventoryButton.setText("View Inventory Items");
        viewInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInventoryButtonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 51, 51));
        jLabel15.setText("Find all customers with a name");

        jLabel16.setText("Enter a name:");

        jLabel18.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 51, 51));
        jLabel18.setText("View a customer's Information with an ID");

        jLabel17.setText("Enter an ID:");

        viewCustomerInfoButton.setText("View Customer Info");
        viewCustomerInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCustomerInfoButtonActionPerformed(evt);
            }
        });

        findCustomersButton.setText("Find Customers");
        findCustomersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomersButtonActionPerformed(evt);
            }
        });

        lowStockButton.setText("Show Low Stock Items");
        lowStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowStockButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel19))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(viewInventoryButton)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lowStockButton)
                .addGap(72, 72, 72))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameToFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idToFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(findCustomersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewCustomerInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewInventoryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(nameToFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findCustomersButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(idToFindTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(viewCustomerInfoButton)
                .addGap(18, 18, 18)
                .addComponent(lowStockButton)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 255, 204));

        jLabel14.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel14.setText("Add a New Sale");

        SearchASale.setText("Search");
        SearchASale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchASaleActionPerformed(evt);
            }
        });

        jLabel20.setText("Customer ID");

        jLabel21.setText("Item ID");

        jLabel22.setText("Quantity Sold");

        jLabel23.setText("Date  \"month/day/year\"");

        jLabel24.setText("Find a Customer's Sale By ID");

        jLabel25.setText("Customer ID:");

        AddSaleButton.setText("Add Sale");
        AddSaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSaleButtonActionPerformed(evt);
            }
        });

        jLabel26.setText("Sale ID");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 54, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(SearchASale)
                        .addGap(97, 97, 97))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemIDTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantitySoldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(saleID, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddSaleButton)
                    .addComponent(customeridSaleTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(12, 12, 12)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saleID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customeridSaleTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemIDTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantitySoldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(AddSaleButton)
                .addGap(25, 25, 25)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(idTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchASale)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sale ID", "Item ID", "Customer Name", "Item Name/Description", "Quantity Sold", "Price Per Kite", "Date Sold"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel28.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 0, 255));
        jLabel28.setText("Sale Table (Hit Search First)");

        jMenu1.setText("Functions");

        jMenuItem1.setText("Clear the Screen");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Search Customer by ID");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Exit Program");

        Exit.setText("Close Program");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu2.add(Exit);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jLabel28))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
       final String DB_URL = "jdbc:derby://localhost:1527/projectdb";

    try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
          var pstmt = conn.prepareStatement("INSERT INTO customer VALUES (?, ?, ?, ?)")) {

        int id;
        try {
            id = Integer.parseInt(idTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid ID.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String name = nameTextField.getText();
        String address = addressTextField.getText();

        double creditLimit;
        try {
            creditLimit = Double.parseDouble(creditLimitTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid credit limit.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        pstmt.setInt(1, id);
        pstmt.setString(2, name);
        pstmt.setString(3, address);
        pstmt.setDouble(4, creditLimit);

        pstmt.executeUpdate();
        
        JOptionPane.showMessageDialog(null, "New customer added successfully.", "Customer Added", JOptionPane.PLAIN_MESSAGE);
        System.out.println("New customer added successfully.");

    } catch (SQLException e) {
        e.printStackTrace();
    } 
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
  final String DB_URL = "jdbc:derby://localhost:1527/projectdb";

    try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
        var pstmt = conn.prepareStatement("INSERT INTO inventory VALUES (?, ?, ?, ?, ?, ?)")) {
        int id = Integer.parseInt(itemIDTextField.getText());
        String description = descriptionTextField.getText();
        double price = Double.parseDouble(priceTextField.getText());
        int quantity = Integer.parseInt(quantityTextField.getText());
        String shape = shapeTextField.getText();
        String color = colorTextField.getText();
    
        pstmt.setInt(1, id);
        pstmt.setString(2, description);
        pstmt.setDouble(3, price);
        pstmt.setInt(4, quantity);
        pstmt.setString(5, shape);
        pstmt.setString(6, color);

        pstmt.executeUpdate();
        
        JOptionPane.showMessageDialog(null, "New inventory item added successfully.", "Item Added", JOptionPane.PLAIN_MESSAGE);
        System.out.println("New inventory item added successfully.");

    } catch (SQLException e) {
        e.printStackTrace();
    }
        
        
      
    }//GEN-LAST:event_addItemButtonActionPerformed

    private void viewInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInventoryButtonActionPerformed
 final String DB_URL = "jdbc:derby://localhost:1527/projectdb";

    StringBuilder sb = new StringBuilder();
    try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
         Statement stmt = conn.createStatement()) {

        ResultSet rs = stmt.executeQuery("SELECT * FROM inventory");

        while (rs.next()) {
            int id = rs.getInt("InventoryID");
            String description = rs.getString("description");
            double price = rs.getDouble("price");
            int quantity = rs.getInt("quantity");
            String shape = rs.getString("shape");
            String color = rs.getString("color");

            sb.append(String.format("ID: %d, Description: %s, Price: $%.2f, Quantity: %d, Shape: %s, Color: %s\n", id, description, price, quantity, shape, color));
        }

        rs.close();

    } catch (SQLException e) {
        e.printStackTrace();
    }

    JOptionPane.showMessageDialog(null, sb.toString(), "Inventory Information", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_viewInventoryButtonActionPerformed

    private void findCustomersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomersButtonActionPerformed
final String DB_URL = "jdbc:derby://localhost:1527/projectdb";
    StringBuilder sb = new StringBuilder();
    try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
        var pstmt = conn.prepareStatement("SELECT * FROM customer WHERE name = ?")) {

        String name = nameToFindTextField.getText();
        pstmt.setString(1, name);

        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            int id = rs.getInt("id");
            String customerName = rs.getString("name");
            String address = rs.getString("address");
            double creditLimit = rs.getDouble("credit_limit");

            sb.append(String.format("ID: %d, Name: %s, Address: %s, Credit Limit: $%.2f\n", id, customerName, address, creditLimit));
        }

        rs.close();

    } catch (SQLException e) {
        e.printStackTrace();
    }

    JOptionPane.showMessageDialog(null, sb.toString(), "Find Customers", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_findCustomersButtonActionPerformed

    private void viewCustomerInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCustomerInfoButtonActionPerformed
final String DB_URL = "jdbc:derby://localhost:1527/projectdb";

try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
    var pstmt = conn.prepareStatement("SELECT * FROM customer WHERE id = ?")) {

    int id = Integer.parseInt(idToFindTextField.getText());
    pstmt.setInt(1, id);

    ResultSet rs = pstmt.executeQuery();

    while (rs.next()) {
        String name = rs.getString("name");
        String address = rs.getString("address");
        double creditLimit = rs.getDouble("credit_limit");

        String message = String.format("ID: %d, Name: %s, Address: %s, Credit Limit: $%.2f\n", id, name, address, creditLimit);
        JOptionPane.showMessageDialog(null, message, "Customer Info", JOptionPane.INFORMATION_MESSAGE);
    }

    rs.close();

    } catch (SQLException e) {
    e.printStackTrace();
    }
    }//GEN-LAST:event_viewCustomerInfoButtonActionPerformed

    private void lowStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowStockButtonActionPerformed
            JFrame frame = new JFrame("Low-Stock Items");
            final String DB_URL = "jdbc:derby://localhost:1527/projectdb";
        try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
         Statement stmt = conn.createStatement()) {
            ResultSet rs = stmt.executeQuery("SELECT * FROM inventory WHERE quantity <= 5");

        if (!rs.next()) {
            JOptionPane.showMessageDialog(frame, "There are no items with 5 or fewer items in stock.");
        }
        else {
            StringBuilder sb = new StringBuilder("Low-Stock Items:\n\n");
            do {
                int id = rs.getInt("InventoryID");
                String description = rs.getString("description");
                String shape = rs.getString("shape");
                String color = rs.getString("color");
                double price = rs.getDouble("price");
                int quantity = rs.getInt("quantity");

                sb.append("ID: ").append(id).append("\n")
                        .append("Description: ").append(description).append("\n")
                        .append("Shape: ").append(shape).append("\n")
                        .append("Color: ").append(color).append("\n")
                        .append("Price: $").append(price).append("\n")
                        .append("Quantity: ").append(quantity).append("\n\n");

            } while (rs.next());
            JOptionPane.showMessageDialog(frame, sb.toString());
        }

        rs.close();
        }
      catch (SQLException ex) {
        ex.printStackTrace();
    }
frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
frame.pack();
frame.setLocationRelativeTo(null);
frame.setVisible(false);
    }//GEN-LAST:event_lowStockButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    nameTextField.setText("");
    idTextField.setText("");
    creditLimitTextField.setText("");
    addressTextField.setText("");
    quantityTextField.setText("");
    priceTextField.setText("");
    itemIDTextField.setText("");
    descriptionTextField.setText("");
    colorTextField.setText("");
    shapeTextField.setText("");
    nameToFindTextField.setText("");
    idToFindTextField.setText("");
    saleID.setText("");
    customeridSaleTextField1.setText("");
    itemIDTextField1.setText("");
    quantitySoldTextField.setText("");
    dateTextField.setText("");
    idTextField1.setText("");
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
              JFrame frame = new JFrame("Search Customer By ID");

        String customerID = JOptionPane.showInputDialog(frame, "Enter Customer ID:");
            final String DB_URL = "jdbc:derby://localhost:1527/projectdb";

        if (customerID != null) {
            try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
                 var stmt = conn.prepareStatement("SELECT * FROM customer WHERE id = ?")) {
                stmt.setString(1, customerID);
                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    String name = rs.getString("name");
                    String address = rs.getString("address");
                    double creditLimit = rs.getDouble("credit_limit");

                    StringBuilder sb = new StringBuilder();
                    sb.append("Customer ID: ").append(customerID).append("\n")
                            .append("Name: ").append(name).append("\n")
                            .append("Address: ").append(address).append("\n")
                            .append("Credit Limit: $").append(creditLimit);

                    JOptionPane.showMessageDialog(frame, sb.toString());
                } else {
                    JOptionPane.showMessageDialog(frame, "Customer with ID " + customerID + " not found.");
                }

                rs.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void SearchASaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchASaleActionPerformed
     final String DB_URL = "jdbc:derby://localhost:1527/projectdb";

    int customerId = Integer.parseInt(idTextField1.getText());

    String sqlQuery = "SELECT Sale.ID, Customer.Name, Inventory.InventoryID, Inventory.Description, Sale.Quantity_Sold, Inventory.Price, Sale.Order_Date " +
                      "FROM Sale " +
                      "INNER JOIN Customer ON Sale.Customer_ID = Customer.ID " +
                      "INNER JOIN Inventory ON Sale.Inventory_ID = Inventory.InventoryID " +
                      "WHERE Customer.ID = " + customerId;

    try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
         Statement stmt = conn.createStatement()) {

        ResultSet rs = stmt.executeQuery(sqlQuery);

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Sale ID");
        model.addColumn("Item ID");
        model.addColumn("Customer Name");
        model.addColumn("Item Name/Description");
        model.addColumn("Quantity Sold");
        model.addColumn("Price Per Kite");
        model.addColumn("Date Sold");

        while (rs.next()) {
            Object[] row = new Object[7];
            row[0] = rs.getInt("ID");
            row[1] = rs.getInt("InventoryID");
            row[2] = rs.getString("Name");
            row[3] = rs.getString("Description");
            row[4] = rs.getInt("Quantity_Sold");
            row[5] = rs.getDouble("Price");
            row[6] = rs.getString("Order_Date");
            model.addRow(row);
        }

        jTable1.setModel(model);

    } catch (SQLException ex) {
        System.out.println("Error executing query: " + ex.getMessage());
    }
    }//GEN-LAST:event_SearchASaleActionPerformed

    private void AddSaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSaleButtonActionPerformed
                                    
    final String DB_URL = "jdbc:derby://localhost:1527/projectdb";

    int  saleID1 = Integer.parseInt(saleID.getText());
    int customerId = Integer.parseInt(customeridSaleTextField1.getText());
    int itemId = Integer.parseInt(itemIDTextField1.getText());
    int quantitySold = Integer.parseInt(quantitySoldTextField.getText());
    String dateSold = String.valueOf(dateTextField.getText());

    String sqlQuery = "INSERT INTO Sale (ID, Customer_ID, Inventory_ID, Quantity_Sold, Order_Date) " +
                      "VALUES (? ,?, ?, ?, ?)";

    try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
         var pstmt = conn.prepareStatement(sqlQuery)) {

        pstmt.setInt(1, saleID1);
        pstmt.setInt(2, customerId);
        pstmt.setInt(3, itemId);
        pstmt.setInt(4, quantitySold);
        pstmt.setString(5, dateSold);

        int numRowsInserted = pstmt.executeUpdate();

        if (numRowsInserted > 0) {
            JOptionPane.showMessageDialog(null, "New sale added successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Failed to add new sale.");
        }

    } catch (SQLException ex) {
        System.out.println("Error executing query: " + ex.getMessage());
    }
    }//GEN-LAST:event_AddSaleButtonActionPerformed

   
    public static void main(String args[]) {
        
        final String DB_URL = "jdbc:derby://localhost:1527/projectdb";
           try (Connection conn = DriverManager.getConnection(DB_URL, "root", "password");
             Statement stmt = conn.createStatement()) {
               
              
       String createCustomerTable = "CREATE TABLE customer (" +
                "id INT PRIMARY KEY," +
                "name VARCHAR(255) NOT NULL," +
                "address VARCHAR(255) NOT NULL," +
                "credit_limit DECIMAL(10,2) NOT NULL" +
                ")";
            stmt.executeUpdate(createCustomerTable);

            String createInventoryTable = "CREATE TABLE inventory (" +
             "InventoryID INT PRIMARY KEY," +
             "description VARCHAR(255) NOT NULL," +
             "price DECIMAL(10,2) NOT NULL," +
             "quantity INT NOT NULL," +
             "shape VARCHAR(255) NOT NULL," +
             "color VARCHAR(255) NOT NULL" +
             ")";
            stmt.executeUpdate(createInventoryTable);

            String createSaleTable = "CREATE TABLE sale (" +
                "id INT PRIMARY KEY," +
                "customer_id INT NOT NULL," +
                "inventory_id INT NOT NULL," +
                "quantity_sold INT NOT NULL," +
                "order_date VARCHAR(10) NOT NULL," + 
                "FOREIGN KEY (customer_id) REFERENCES customer(id)," +
                "FOREIGN KEY (inventory_id) REFERENCES inventory(InventoryID)" +
                ")";
            stmt.executeUpdate(createSaleTable);

            System.out.println("Tables created successfully.");
            String[] names = {"Karim Sasa", "Barack Obama", "Donald Trump", "Joe Biden", "Patrick Star"};
            String[] addresses = {"123 Main St", "456 Elm St", "789 Oak Ave", "1011 Maple Dr", "1213 Pine Rd"};
            double[] creditLimits = {1000.00, 5000.00, 2500.00, 7500.00, 10000.00};

            for (int i = 0; i < names.length; i++) {
            String insertCustomer = String.format("INSERT INTO customer VALUES (%d, '%s', '%s', %.2f)", i+1, names[i], addresses[i], creditLimits[i]);
            stmt.executeUpdate(insertCustomer);
            }
            int[] inventoryID = {10, 11, 12, 13, 14};
            String[] descriptions = {"Waterproof Kite", "Recycled Materials Kite", "Highest Flying Kite", "Kiddie Kite", "Beginners Kite"};
            double[] prices = {30.00, 10.00, 50.00, 5.00, 15.00};
            int[] quantities = {5, 20, 3, 22, 30};
            String[] shapes = {"Oval", "Circular", "Sharp Diamond", "Princess Shape", "Standard Diamond"};
            String[] colors = {"Red", "Green", "Black", "Pink", "Blue"};

            for (int i = 0; i < descriptions.length; i++) {
            String insertInventory = String.format("INSERT INTO inventory (InventoryID, Description, Price, Quantity, Shape, Color) VALUES (%d, '%s', %.2f, %d, '%s', '%s')", inventoryID[i], descriptions[i], prices[i], quantities[i], shapes[i], colors[i]);
            stmt.executeUpdate(insertInventory);
            }
            int[] customerIds = {1, 2, 3, 4, 5};
            int[] inventoryIds = {10, 11, 12, 13, 14};
            int[] quantitiesSold = {10, 5, 2, 8, 3};
            String[] orderDates = {"1/1/2023", "1/2/2023", "1/3/2023", "1/4/2023", "1/5/2023"};

            for (int i = 0; i < customerIds.length; i++) {
            String insertSale = String.format("INSERT INTO sale VALUES (%d, %d, %d, %d, '%s')", i+1, customerIds[i], inventoryIds[i], quantitiesSold[i], orderDates[i]);
            stmt.executeUpdate(insertSale);
    }
            stmt.close();
            conn.close();
            
            
            

            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    

           
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddSaleButton;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton SearchASale;
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JButton addItemButton;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JTextField colorTextField;
    private javax.swing.JTextField creditLimitTextField;
    private javax.swing.JTextField customeridSaleTextField1;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JButton findCustomersButton;
    private javax.swing.JTextField idTextField;
    private javax.swing.JTextField idTextField1;
    private javax.swing.JTextField idToFindTextField;
    private javax.swing.JTextField itemIDTextField;
    private javax.swing.JTextField itemIDTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton lowStockButton;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField nameToFindTextField;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JTextField quantitySoldTextField;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JTextField saleID;
    private javax.swing.JTextField shapeTextField;
    private javax.swing.JButton viewCustomerInfoButton;
    private javax.swing.JButton viewInventoryButton;
    // End of variables declaration//GEN-END:variables
}
